##
enhancer.table = read.table("~/Desktop/clean_tracker.tsv", sep="\t", quote="", header=T)
##
JT.table = read.xlsx("~/Desktop/enhancer_standards/summary of JT team RO testing for neocortical enhancers.xlsx", startRow=1)
JT.table = JT.table[-1,]
## Format into table
enh.table.df = data.frame("Enhancer ID" = JT.table[["Enh.ID"]],
"Plasmid original" = JT.table[["CN#"]],
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = JT.table[["batch"]],
"SYFP" = "",
"Injection route" = JT.table[["Viral.application"]],
"Primary screen region" = "",
"Species" = "",
"Genome assembly" = "",
"Genome coordinates" = "",
"Targeted cell population" = "",
"Proximal gene" = "",
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "JT tracker",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = JT.table[["Expression.analysis"]],
"Notes2" = JT.table[["target.cell.type"]])
enh.table.df = enh.table.df[grepl("^CN", enh.table.df$Plasmid.original),]
enh.table.df = enh.table.df[!grepl("\\+", enh.table.df$Plasmid.original),]
enh.table.df$Plasmid.original = unlist(lapply(enh.table.df$Plasmid.original, function(x) substring(x,1,6)))
##
anno.JT.table = enhancer.table[match(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original),]
enh.table.df$Enhancer.ID = anno.JT.table$Enhancer.ID
enh.table.df$Species = anno.JT.table$Species
enh.table.df$Genome.assembly = anno.JT.table$Genome.assembly
enh.table.df$Genome.coordinates = anno.JT.table$Genome.coordinates
enh.table.df$Proximal.gene = anno.JT.table$Proximal.gene
enh.table.df$Targeted.cell.population = anno.JT.table$Targeted.cell.population
##
missing.cn = setdiff(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original)
enhancer.table$Notes2 = ""
enhancer.table = rbind(enhancer.table, enh.table.df[which(enh.table.df$Plasmid.original %in% missing.cn),])
write.xlsx(enhancer.table, file="~/Desktop/enhancer_vector_and_JT_cleaned.xlsx", overwrite = T)
str(enhancer.table)
library(dplyr)
library(openxlsx)
enhancer.table = read.xlsx("~/Desktop/enhancer_standards/EnhancerVectorStatus.xlsx", startRow=2)
fixed.types = read.xlsx("~/Desktop/Internal_enhancer_screening_coordination.xlsx", sheet="Allowed_labels_TARS")
## Build translation
map.df = data.frame(old.ct = unique(enhancer.table$Predicted.cell.types));
map.df$new.ct = map.df$old.ct; map.df$fixed = FALSE
## Basic cleaning
map.df$new.ct = tolower(map.df$new.ct)
map.df$new.ct = gsub(" class", "", map.df$new.ct)
map.df$new.ct = gsub(" neurons", "", map.df$new.ct)
## Per type cleaning Exc
map.df$new.ct[grep("l2", map.df$new.ct)] = "L23_IT"; map.df$fixed[which(map.df$new.ct == "L23_IT")] = TRUE
map.df$new.ct[grep("l4", map.df$new.ct)] = "L4_IT"; map.df$fixed[which(map.df$new.ct == "L4_IT")] = TRUE
map.df$new.ct[grep("l5 pt", map.df$new.ct)] = "L5_PT"; map.df$fixed[which(map.df$new.ct == "L5_PT")] = TRUE
map.df$new.ct[grep("l5 et", map.df$new.ct)] = "L5_ET"; map.df$fixed[which(map.df$new.ct == "L5_ET")] = TRUE
map.df$new.ct[grep("l5 np", map.df$new.ct)] = "L5_NP"; map.df$fixed[which(map.df$new.ct == "L5_NP")] = TRUE
map.df$new.ct[grep("l6b", map.df$new.ct)] = "L6b"; map.df$fixed[which(map.df$new.ct == "L6b")] = TRUE
map.df$new.ct[grep("l6 ct", map.df$new.ct)] = "L6_CT"; map.df$fixed[which(map.df$new.ct == "L6_CT")] = TRUE
map.df$new.ct[grep("l6", map.df$new.ct)] = "L6"; map.df$fixed[which(map.df$new.ct == "L6")] = TRUE
## Per type cleaning Inh
map.df$new.ct[grep("chodl", map.df$new.ct)] = "Sst_Chodl"; map.df$fixed[which(map.df$new.ct == "Sst_Chodl")] = TRUE
map.df$new.ct[grep("^sst", map.df$new.ct)] = "Sst"; map.df$fixed[which(map.df$new.ct == "Sst")] = TRUE
map.df$new.ct[grep("^pvalb", map.df$new.ct)] = "Pvalb"; map.df$fixed[which(map.df$new.ct == "Pvalb")] = TRUE
map.df$new.ct[grep("^sncg", map.df$new.ct)] = "Sncg"; map.df$fixed[which(map.df$new.ct == "Sncg")] = TRUE
map.df$new.ct[grep("^vip", map.df$new.ct)] = "Vip"; map.df$fixed[which(map.df$new.ct == "Vip")] = TRUE
map.df$new.ct[grep("^lamp5", map.df$new.ct)] = "Lamp5"; map.df$fixed[which(map.df$new.ct == "Lamp5")] = TRUE
map.df$new.ct[grep("chand", map.df$new.ct)] = "Chandelier"; map.df$fixed[which(map.df$new.ct == "Chandelier")] = TRUE
## Per type cleaning Non-neuronal
map.df$new.ct[grep("^oligo", map.df$new.ct)] = "Oligo"; map.df$fixed[which(map.df$new.ct == "Oligo")] = TRUE
map.df$new.ct[grep("^opc", map.df$new.ct)] = "OPC"; map.df$fixed[which(map.df$new.ct == "OPC")] = TRUE
map.df$new.ct[grep("^astro", map.df$new.ct)] = "Astro"; map.df$fixed[which(map.df$new.ct == "Astro")] = TRUE
map.df$new.ct[grep("^micro", map.df$new.ct)] = "Micro"; map.df$fixed[which(map.df$new.ct == "Micro")] = TRUE
map.df$new.ct[grep("^endo", map.df$new.ct)] = "Endo"; map.df$fixed[which(map.df$new.ct == "Endo")] = TRUE
map.df$new.ct[grep("^vlmc", map.df$new.ct)] = "VLMC"; map.df$fixed[which(map.df$new.ct == "VLMC")] = TRUE
##
enhancer.table$mapped.ct = map.df$new.ct[match(enhancer.table$Predicted.cell.types, map.df$old.ct)]
enhancer.table$fixed.ct = map.df$fixed[match(enhancer.table$Predicted.cell.types, map.df$old.ct)]
##
#enhancer.table = enhancer.table %>% filter(fixed.ct == TRUE)
##
enhancer.table$Proximal.marker.gene[grep("fortuit",enhancer.table$Proximal.marker.gene)] = "NA"
## CN id fix
enhancer.table$`Used.in.these.vectors.(CN#)`[grep("^[0-9]", enhancer.table$`Used.in.these.vectors.(CN#)`)] = paste0("CN", enhancer.table$`Used.in.these.vectors.(CN#)`[grep("^[0-9]", enhancer.table$`Used.in.these.vectors.(CN#)`)])
## Species fix
enhancer.table$Species[grep("[Mm]m", gsub("\t", "", enhancer.table$Species))] = "Mus musculus"
enhancer.table$Species[grep("^[Hh]", enhancer.table$Species)] = "Homo sapiens"
enhancer.table$Species[grep("Rhe", enhancer.table$Species)] = "Macaca mulatta"
## Genome assembly fix
enhancer.table$Genome.assembly[grep("^hg|Hg", enhancer.table$Genome.assembly)] = "hg38"
enhancer.table$Genome.assembly[grep("^[Mm]m1|Mm1|MM1", enhancer.table$Genome.assembly)] = "mm10"
enhancer.table$Genome.assembly[grep("Mm10", enhancer.table$Genome.assembly)] = "mm10"
enhancer.table$Genome.assembly[grep("^Rhe", enhancer.table$Genome.assembly)] = "mmul10"
## Format into table
enh.table.df = data.frame("Enhancer ID" = gsub("\t", "", enhancer.table$HGT.Enhancer.ID),
"Plasmid original" = gsub("\t", "", enhancer.table[["Used.in.these.vectors.(CN#)"]]),
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = "",
"SYFP" = "",
"Injection route" = "",
"Primary screen region" = "",
"Species" = gsub("\t", "", enhancer.table$Species),
"Genome assembly" = enhancer.table$Genome.assembly,
"Genome coordinates" = gsub(",","", enhancer.table$Genome.coordinates),
"Targeted cell population" = gsub("\n", "", enhancer.table$mapped.ct),
"Proximal gene" = enhancer.table$Proximal.marker.gene,
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = enhancer.table$Predicted.cell.types)
str(enh.table.df)
write.table(enh.table.df, file="~/Desktop/clean_enhancer_tracker.tsv", sep="\t", row.names=F, quote=F)
write.table(enh.table.df, file="~/Desktop/clean_enhancer_tracker.tsv", sep="\t", row.names=F, quote=F)
library(dplyr)
library(openxlsx)
## Load in sanatized enhancer ID table
enhancer.table = read.table("~/Desktop/clean_enhancer_tracker.tsv", sep="\t", quote="", header=T)
## Load in virus info
viral.packaging = read.xlsx("~/Desktop/enhancer_standards/EnhancerVectorStatus.xlsx", startRow=2, sheet="HGT Vector Design")
viral.packaging = viral.packaging[grep("eHGT", viral.packaging$Full.description),]
## Get starting point for enhancer namess
viral.packaging$Full.description[1] = "eHGT_001h"
plasmid.info = strsplit(viral.packaging$Full.description, "-"); enhancer.ids = list()
for(itr in 1:length(plasmid.info)){
enhancer.ids[[itr]] = plasmid.info[[itr]][grep("eHGT", plasmid.info[[itr]])]
if(length(enhancer.ids[[itr]] > 1)) { enhancer.ids[[itr]] = paste(enhancer.ids[[itr]] , collapse="-")}
}
enhancer.ids = Reduce(c, enhancer.ids)
enhancer.ids = unlist(sapply(enhancer.ids, function(x) { substring(x, regexpr("eHGT", x)) })); names(enhancer.ids) = NULL
enhancer.ids = gsub("eHGT_", "", enhancer.ids)
enhancer.ids = substring(enhancer.ids, 1, 4)
enhancer.ids = gsub("\\(|\\)", "", enhancer.ids)
enhancer.ids[!grepl("m|h", enhancer.ids)] = paste0(enhancer.ids[!grepl("m|h", enhancer.ids)], "rh")
viral.packaging$Enhancer.ID = paste0("eHGT_", enhancer.ids)
viral.packaging.anno = enhancer.table[match(viral.packaging$Enhancer.ID, enhancer.table$Enhancer.ID),]
## Format into table
enh.table.df = data.frame("Enhancer ID" = gsub("\t", "", viral.packaging$Enhancer.ID),
"Plasmid original" = gsub("\t", "", viral.packaging$CN.ID),
"Plasmid short" = paste0("AiP", as.integer(gsub("CN", "", viral.packaging$CN.ID)) + 10000),
"Plasmid long" = viral.packaging$Revised.Description,
"Viral prep ID" = "",
"SYFP" = "",
"Injection route" = "",
"Primary screen region" = "",
"Species" = gsub("\t", "", viral.packaging.anno$Species),
"Genome assembly" = viral.packaging.anno$Genome.assembly,
"Genome coordinates" = gsub(",","", viral.packaging.anno$Genome.coordinates),
"Targeted cell population" = gsub("\n", "", viral.packaging.anno$Targeted.cell.population),
"Proximal gene" = viral.packaging.anno$Proximal.gene,
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "EnhancerVectorStatus",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = viral.packaging.anno$Notes)
##
anno = read.xlsx("~/Desktop/enhancer_standards/EnhancerVectorStatus.xlsx", startRow=2, sheet="HGT Viral Packaging")
anno$id = paste0(anno$Full.plasmid.description, "-", anno$CN.ID)
enh.table.df$id = paste0(enh.table.df$Plasmid.long, "-", enh.table.df$Plasmid.original)
enh.table.df$Viral.prep.ID = gsub("\n", "", gsub("\t", "", anno[match(enh.table.df$id, anno$id),]$`VT#`))
enh.table.df$SYFP = ifelse(grepl("SYFP", enh.table.df$Plasmid.long), "Y", "")
##
enh.table.df$Genome.coordinates = gsub("\\..", "-", enh.table.df$Genome.coordinates)
enh.table.df$id = NULL
##
write.table(enh.table.df, file="~/Desktop/clean_tracker.tsv", sep="\t", row.names=F, quote=F)
library(dplyr)
library(openxlsx)
##
enhancer.table = read.table("~/Desktop/clean_tracker.tsv", sep="\t", quote="", header=T)
##
JT.table = read.xlsx("~/Desktop/enhancer_standards/summary of JT team RO testing for neocortical enhancers.xlsx", startRow=1)
JT.table = JT.table[-1,]
## Format into table
enh.table.df = data.frame("Enhancer ID" = JT.table[["Enh.ID"]],
"Plasmid original" = JT.table[["CN#"]],
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = JT.table[["batch"]],
"SYFP" = "",
"Injection route" = JT.table[["Viral.application"]],
"Primary screen region" = "",
"Species" = "",
"Genome assembly" = "",
"Genome coordinates" = "",
"Targeted cell population" = "",
"Proximal gene" = "",
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "JT tracker",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = JT.table[["Expression.analysis"]],
"Notes2" = JT.table[["target.cell.type"]])
enh.table.df = enh.table.df[grepl("^CN", enh.table.df$Plasmid.original),]
enh.table.df = enh.table.df[!grepl("\\+", enh.table.df$Plasmid.original),]
enh.table.df$Plasmid.original = unlist(lapply(enh.table.df$Plasmid.original, function(x) substring(x,1,6)))
##
anno.JT.table = enhancer.table[match(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original),]
enh.table.df$Enhancer.ID = anno.JT.table$Enhancer.ID
enh.table.df$Species = anno.JT.table$Species
enh.table.df$Genome.assembly = anno.JT.table$Genome.assembly
enh.table.df$Genome.coordinates = anno.JT.table$Genome.coordinates
enh.table.df$Proximal.gene = anno.JT.table$Proximal.gene
enh.table.df$Targeted.cell.population = anno.JT.table$Targeted.cell.population
##
missing.cn = setdiff(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original)
enhancer.table$Notes2 = ""
enhancer.table = rbind(enhancer.table, enh.table.df[which(enh.table.df$Plasmid.original %in% missing.cn),])
write.xlsx(enhancer.table, file="~/Desktop/enhancer_vector_and_JT_cleaned.xlsx", overwrite = T)
str(enhancer.table)
enh.table.df
enh.table.df$Plasmid.long
enh.table.df$Plasmid.original
library(dplyr)
library(openxlsx)
##
enhancer.table = read.table("~/Desktop/clean_tracker.tsv", sep="\t", quote="", header=T)
##
JT.table = read.xlsx("~/Desktop/enhancer_standards/summary of JT team RO testing for neocortical enhancers.xlsx", startRow=1)
JT.table = JT.table[-1,]
## Format into table
enh.table.df = data.frame("Enhancer ID" = JT.table[["Enh.ID"]],
"Plasmid original" = JT.table[["CN#"]],
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = JT.table[["batch"]],
"SYFP" = "",
"Injection route" = JT.table[["Viral.application"]],
"Primary screen region" = "",
"Species" = "",
"Genome assembly" = "",
"Genome coordinates" = "",
"Targeted cell population" = "",
"Proximal gene" = "",
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "JT tracker",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = JT.table[["Expression.analysis"]],
"Notes2" = JT.table[["target.cell.type"]])
enh.table.df = enh.table.df[grepl("^CN", enh.table.df$Plasmid.original),]
enh.table.df = enh.table.df[!grepl("\\+", enh.table.df$Plasmid.original),]
enh.table.df$Plasmid.original = unlist(lapply(enh.table.df$Plasmid.original, function(x) substring(x,1,6)))
##
anno.JT.table = enhancer.table[match(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original),]
enh.table.df$Enhancer.ID = anno.JT.table$Enhancer.ID
enh.table.df$Species = anno.JT.table$Species
enh.table.df$Genome.assembly = anno.JT.table$Genome.assembly
enh.table.df$Genome.coordinates = anno.JT.table$Genome.coordinates
enh.table.df$Proximal.gene = anno.JT.table$Proximal.gene
enh.table.df$Targeted.cell.population = anno.JT.table$Targeted.cell.population
##
missing.cn = setdiff(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original)
enhancer.table$Notes2 = ""
enhancer.table = rbind(enhancer.table, enh.table.df[which(enh.table.df$Plasmid.original %in% missing.cn),])
write.xlsx(enhancer.table, file="~/Desktop/enhancer_vector_and_JT_cleaned.xlsx", overwrite = T)
str(enhancer.table)
## Format into table
enh.table.df = data.frame("Enhancer ID" = JT.table[["Enh.ID"]],
"Plasmid original" = JT.table[["CN#"]],
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = JT.table[["batch"]],
"SYFP" = "",
"Injection route" = JT.table[["Viral.application"]],
"Primary screen region" = "",
"Species" = "",
"Genome assembly" = "",
"Genome coordinates" = "",
"Targeted cell population" = "",
"Proximal gene" = "",
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "JT tracker",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = JT.table[["Expression.analysis"]],
"Notes2" = JT.table[["target.cell.type"]])
library(dplyr)
library(openxlsx)
##
enhancer.table = read.table("~/Desktop/clean_tracker.tsv", sep="\t", quote="", header=T)
##
JT.table = read.xlsx("~/Desktop/enhancer_standards/summary of JT team RO testing for neocortical enhancers.xlsx", startRow=1)
JT.table = JT.table[-1,]
## Format into table
enh.table.df = data.frame("Enhancer ID" = JT.table[["Enh.ID"]],
"Plasmid original" = JT.table[["CN#"]],
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = JT.table[["batch"]],
"SYFP" = "",
"Injection route" = JT.table[["Viral.application"]],
"Primary screen region" = "",
"Species" = "",
"Genome assembly" = "",
"Genome coordinates" = "",
"Targeted cell population" = "",
"Proximal gene" = "",
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "JT tracker",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = JT.table[["Expression.analysis"]],
"Notes2" = JT.table[["target.cell.type"]])
enh.table.df = enh.table.df[grepl("^CN", enh.table.df$Plasmid.original),]
enh.table.df = enh.table.df[!grepl("\\+", enh.table.df$Plasmid.original),]
enh.table.df$Plasmid.original = unlist(lapply(enh.table.df$Plasmid.original, function(x) substring(x,1,6)))
##
anno.JT.table = enhancer.table[match(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original),]
enh.table.df$Enhancer.ID = anno.JT.table$Enhancer.ID
enh.table.df$Species = anno.JT.table$Species
enh.table.df$Genome.assembly = anno.JT.table$Genome.assembly
enh.table.df$Genome.coordinates = anno.JT.table$Genome.coordinates
enh.table.df$Proximal.gene = anno.JT.table$Proximal.gene
enh.table.df$Targeted.cell.population = anno.JT.table$Targeted.cell.population
##
missing.cn = setdiff(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original)
enhancer.table$Notes2 = ""
enhancer.table = rbind(enhancer.table, enh.table.df[which(enh.table.df$Plasmid.original %in% missing.cn),])
write.xlsx(enhancer.table, file="~/Desktop/enhancer_vector_and_JT_cleaned.xlsx", overwrite = T)
tracker = read.xlsx("~/Desktop/Internal_enhancer_screening_coordination.xlsx", sheet="DREAM_Enhancer_selection")
tracker = read.xlsx("~/Desktop/Internal_enhancer_screening_coordination.xlsx", sheet="DREAM_Enhancer_selection")
tracker
str(tracker)
tracker %>% group_by(EnhancerID)
tracker %>%
group_by(EnhancerID) %>%
filter(n()>1)
enh.tracker$EnhancerID
##
enh.tracker = tracker %>%
group_by(EnhancerID) %>%
filter(n()>1)
enh.tracker$EnhancerID
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[tracker$EnhancerID == enh,]$Plasmid.short, collapse = " | ")
}
}
enh.tracker
enh.tracker$Plasmid.short
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
}
}
enh.tracker
enh.tracker$Plasmid.short
enh.tracker$EnhancerID
##
for(enh in enh.tracker$EnhancerID){
print(enh)
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
}
}
##
enh.tracker = tracker %>%
group_by(EnhancerID) %>%
filter(n()>1)
enh.tracker
tracker
##
enh.tracker = tracker %>%
distinct(EnhancerID)
enh.tracker
dim(enh.tracker)
dim(tracker)
##
for(enh in enh.tracker$EnhancerID){
print(enh)
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
enh.tracker
str(enh.tracker)
##
enh.tracker = tracker %>%
distinct(EnhancerID)
str(enh.tracker)
##
enh.tracker = tracker %>%
distinct(EnhancerID, .keep_all = TRUE)
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
str(enh.tracker)
write.xlsx(enhancer.table, file="~/Desktop/enhancer_dream.xlsx", overwrite = T)
write.xlsx(enh.tracker, file="~/Desktop/enhancer_dream.xlsx", overwrite = T)
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
enh.tracker$Plasmid.short
enh = "eHGT_001m"
tracker[which(tracker$EnhancerID == enh),]$Plasmid.short
paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
##
enh.tracker = tracker %>%
distinct(EnhancerID, .keep_all = TRUE)
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker[which(enh.tracker$EnhancerID == enh),]$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker[which(enh.tracker$EnhancerID == enh),]$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
write.xlsx(enh.tracker, file="~/Desktop/enhancer_dream.xlsx", overwrite = T)
library(dplyr)
##
tracker = read.xlsx("~/Desktop/Internal_enhancer_screening_coordination.xlsx", sheet="Enhancer")
##
enh.tracker = tracker %>%
distinct(EnhancerID, .keep_all = TRUE)
library(dplyr)
##
tracker = read.xlsx("~/Desktop/Internal_enhancer_screening_coordination.xlsx", sheet="Enhancers")
##
enh.tracker = tracker %>%
distinct(EnhancerID, .keep_all = TRUE)
##
#for(enh in enh.tracker$EnhancerID){
#  if(grepl("eHGT", enh)){
#    enh.tracker[which(enh.tracker$EnhancerID == enh),]$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
#    enh.tracker[which(enh.tracker$EnhancerID == enh),]$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
#  }
#}
write.xlsx(enh.tracker, file="~/Desktop/enhancer_dream.xlsx", overwrite = T)
setwd("/Users/nelson.johansen/Documents/GitHub/hubR")
ls
ls()
library(devtools)
build_manual()
document()
build_manual()
