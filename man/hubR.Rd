% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hub.R
\name{hubR}
\alias{hubR}
\title{Builds a track hub for the UCSC genome browser}
\usage{
hubR(
  track.bucket,
  hub.bucket,
  hub.type = "multiwig",
  bigwigs = NULL,
  track.names = NULL,
  track.labels = NULL,
  colors = NULL,
  groupby = NULL,
  species,
  region,
  type,
  taxonomy,
  genome,
  data.dir,
  output.track.file = "trackDB.txt",
  email = "nelson.johansen@alleninstitute.org"
)
}
\arguments{
\item{track.bucket}{Amazon S3 bucket name that stores the .bw files}

\item{hub.bucket}{Amazon S3 bucket name that stores the track hub .txt file}

\item{hub.type}{Format of the track hub: multiwig or composite}

\item{bigwigs}{Either a directory or vector of file names for bigwigs. If a vector, then the order of the vector will define the order of the tracks.}

\item{track.names}{Short labels to give each track. If NULL the function attemps to gather from .bw file name: track.names-*.bw}

\item{track.labels}{Detailed labels to give each track. If NULL the function attemps to gather from .bw file name: track.labels-*.bw}

\item{colors}{Colors (in R, G, B format) to give the tracks. If NULL colors will be auto-generated.}

\item{groupby}{A vector of grouping variables for the bigwigs when building composite or sea-ad tracks.}

\item{species}{Species information}

\item{region}{Brain region information}

\item{type}{Data type (ATAC, Multiome, etc.)}

\item{taxonomy}{Annotation information}

\item{genome}{Genome information, must be a valid UCSC genome browser genome.}

\item{data.dir}{Location of the bigwig files and where the trackDB.txt will be saved locally}

\item{output.track.file}{Output track hub filename. Default: trackDB.txt}

\item{email}{Correspondence email}
}
\value{
Hub URL
}
\description{
This builds the track hub and handles all uploading to AWS S3 buckets as named in track.bucket and hub.bucket.
Any changes to the bigwig file names or 'track.bucket' will require the regeneration of HMAC signatures and the hub file (rerun hubR).
}
